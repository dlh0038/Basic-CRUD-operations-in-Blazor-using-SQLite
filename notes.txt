references:
    -https://executecommands.com/crud-in-blazor-using-sqlite-entity-framework/
    -https://github.com/dotnet/blazor-samples/tree/main/6.0/BlazorServerEFCoreSample/BlazorServerDbContextExample
    -https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.entityframeworkqueryableextensions.tolistasync?view=efcore-6.0
    -https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/?tabs=dotnet-core-cli

commands:
    -dotnet new blazorserver -o test_EFcoreWithBlazor
    -dotnet add package Microsoft.EntityFrameworkCore.Sqlite
    -dotnet add package Microsoft.EntityFrameworkCore.Tools
    -dotnet build
    -dotnet ef migrations add Initial-Commit
    -dotnet ef database update
    -dotnet watch run

notes:
    -added the following to ProductDbContext.cs
        using Microsoft.EntityFrameworkCore;
        using System;
        using System.Diagnostics;
        using System.Threading.Tasks;
    -added the following to ProductServices.cs
        using Microsoft.EntityFrameworkCore;
    -added the following to _Imports.razor
        @using test_EFcoreWithBlazor.Data
    
    -modified Program.cs (NOTE: tutorial uses Startup.cs file)
        -added:
            using test_EFcoreWithBlazor.Data;
            using Microsoft.EntityFrameworkCore;
            builder.Services.AddDbContextFactory<ProductDbContext>(options =>
            {
                options.UseSqlite("Data Source = Products.db");
            });
            builder.Services.AddScoped<ProductServices>();
    -created component page ViewDB.razor
        injected service
            @inject ProductServices service